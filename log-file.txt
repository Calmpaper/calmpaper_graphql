üöÄ Server ready at: http://localhost:4000
‚≠êÔ∏è See sample queries: http://pris.ly/e/js/graphql#using-the-graphql-api
=--------------------------------------------------root
undefined
=--------------------------------------------------args
{ title: 'new book', content: 'ok', userId: 2, bookId: 11 }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'createChapter',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: Chapter!,
  parentType: Mutation,
  path: { prev: undefined, key: 'createChapter' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  author: {
    id: 2,
    username: 'Sam',
    firstname: 'Unknown',
    givenname: 'Digital',
    fullname: 'Digital Unknown',
    email: null,
    avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
    googleId: '109847172728879810845',
    getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
  },
  book: {
    id: 11,
    name: '123',
    description: '123',
    image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
    createdAt: 2020-07-21T13:36:01.422Z,
    authorId: 2,
    views: 2
  }
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: undefined, key: 'createChapter' }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  author: {
    id: 2,
    username: 'Sam',
    firstname: 'Unknown',
    givenname: 'Digital',
    fullname: 'Digital Unknown',
    email: null,
    avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
    googleId: '109847172728879810845',
    getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
  },
  book: {
    id: 11,
    name: '123',
    description: '123',
    image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
    createdAt: 2020-07-21T13:36:01.422Z,
    authorId: 2,
    views: 2
  }
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'title',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: Chapter,
  path: { prev: { prev: undefined, key: 'createChapter' }, key: 'title' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  author: {
    id: 2,
    username: 'Sam',
    firstname: 'Unknown',
    givenname: 'Digital',
    fullname: 'Digital Unknown',
    email: null,
    avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
    googleId: '109847172728879810845',
    getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
  },
  book: {
    id: 11,
    name: '123',
    description: '123',
    image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
    createdAt: 2020-07-21T13:36:01.422Z,
    authorId: 2,
    views: 2
  }
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'content',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String!,
  parentType: Chapter,
  path: { prev: { prev: undefined, key: 'createChapter' }, key: 'content' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  author: {
    id: 2,
    username: 'Sam',
    firstname: 'Unknown',
    givenname: 'Digital',
    fullname: 'Digital Unknown',
    email: null,
    avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
    googleId: '109847172728879810845',
    getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
  },
  book: {
    id: 11,
    name: '123',
    description: '123',
    image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
    createdAt: 2020-07-21T13:36:01.422Z,
    authorId: 2,
    views: 2
  }
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'book',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: Book,
  parentType: Chapter,
  path: { prev: { prev: undefined, key: 'createChapter' }, key: 'book' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'chapters',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Chapter!]!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'chapters' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
{
  id: 5,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.165Z,
  authorId: 2,
  bookId: 11,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '401',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/new-chapter',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '401',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/new-chapter',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($title: String!, $content: String!, $bookId: Int!, $userId: Int!) {\n' +
        '  createChapter(title: $title, content: $content, userId: $userId, bookId: $bookId) {\n' +
        '    id\n' +
        '    title\n' +
        '    content\n' +
        '    book {\n' +
        '      chapters {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13346,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 31,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'uZyjB45sqKzqZs8WVsQrjvut752ToKUf',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 1 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object], [Object], [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 302 }
  },
  variableValues: { title: 'new book', content: 'ok', bookId: 11, userId: 2 }
}
=--------------------------------------------------root
undefined
=--------------------------------------------------args
{ bookId: 11, skip: 1 }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'chapterByBook',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Chapter!]!,
  parentType: Query,
  path: { prev: undefined, key: 'chapterByBook' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'title',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'title' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'content',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'content' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'views',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'views' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'book',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: Book,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'book' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'name',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'name' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'image',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'image' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'author',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: User,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'author' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'likes',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Like!]!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'likes' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{ orderBy: [Object: null prototype] { createdAt: 'desc' } }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'comments',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Comment!]!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'comments' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'fullname',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'fullname' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'username',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'username' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'avatar',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'avatar' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'author',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: User,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'author' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'books',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Book!]!,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'books' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'fullname',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'fullname' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'username',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'username' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'avatar',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'avatar' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 1,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Sat Jul 18 2020 20:52:15 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-05-25 at 16.43.47.png',
  createdAt: 2020-07-18T17:52:17.848Z,
  authorId: 2,
  views: 73
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 0 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 3,
  name: 'sasdas',
  description: 'asd',
  image: null,
  createdAt: 2020-07-20T11:10:18.201Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 1 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 4,
  name: 'asdasdasd',
  description: 'sadasdas',
  image: null,
  createdAt: 2020-07-20T14:05:00.905Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 2 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 5,
  name: 'book with tags',
  description: 'ok',
  image: null,
  createdAt: 2020-07-20T14:08:24.727Z,
  authorId: 2,
  views: 4
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 3 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  name: 'sadas',
  description: 'asdsa',
  image: null,
  createdAt: 2020-07-20T15:13:50.479Z,
  authorId: 2,
  views: 4
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 4 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 7,
  name: 'mah book',
  description: 'asdasdasd',
  image: null,
  createdAt: 2020-07-20T15:31:02.857Z,
  authorId: 2,
  views: 3
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 5 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 8,
  name: '1234',
  description: '1234',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:32:54 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:33:03.146Z,
  authorId: 2,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 6 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 9,
  name: '1234',
  description: '1234',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:32:54 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:33:03.199Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 7 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 10,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.396Z,
  authorId: 2,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 8 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 9 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'reviews',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Review!]!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'reviews' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{ orderBy: [Object: null prototype] { createdAt: 'asc' } }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'chapters',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Chapter!]!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'chapters' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 5,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.165Z,
  authorId: 2,
  bookId: 11,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13551,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 187,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: '-JHm5VI6g9nlyKjyKSN3SYKhw8-ctHib',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 1 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
undefined
=--------------------------------------------------args
{ chapterId: 6 }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '175',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '175',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($chapterId: Int!) {\n' +
        '  incrementChapterViews(chapterId: $chapterId) {\n' +
        '    id\n' +
        '    title\n' +
        '    views\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'incrementChapterViews',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: Chapter!,
  parentType: Mutation,
  path: { prev: undefined, key: 'incrementChapterViews' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 126 }
  },
  variableValues: { chapterId: 6 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '175',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '175',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($chapterId: Int!) {\n' +
        '  incrementChapterViews(chapterId: $chapterId) {\n' +
        '    id\n' +
        '    title\n' +
        '    views\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: {
    prev: { prev: undefined, key: 'incrementChapterViews' },
    key: 'id'
  },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 126 }
  },
  variableValues: { chapterId: 6 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '175',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '175',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($chapterId: Int!) {\n' +
        '  incrementChapterViews(chapterId: $chapterId) {\n' +
        '    id\n' +
        '    title\n' +
        '    views\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'title',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: Chapter,
  path: {
    prev: { prev: undefined, key: 'incrementChapterViews' },
    key: 'title'
  },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 126 }
  },
  variableValues: { chapterId: 6 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '175',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '175',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
    session: Session { cookie: [Object] },
    body: {
      query: 'mutation ($chapterId: Int!) {\n' +
        '  incrementChapterViews(chapterId: $chapterId) {\n' +
        '    id\n' +
        '    title\n' +
        '    views\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13686,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 488,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'xVZsDPNt4bMrBFkpGoaHhW0NOOdujslb',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'views',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: {
    prev: { prev: undefined, key: 'incrementChapterViews' },
    key: 'views'
  },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {},
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'mutation',
    name: undefined,
    variableDefinitions: [ [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 126 }
  },
  variableValues: { chapterId: 6 }
}
=--------------------------------------------------root
undefined
=--------------------------------------------------args
{ bookId: 11, skip: 1 }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'chapterByBook',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Chapter!]!,
  parentType: Query,
  path: { prev: undefined, key: 'chapterByBook' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'title',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'title' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'content',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'content' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'views',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'views' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'book',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: Book,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'book' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'likes',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Like!]!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'likes' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'author',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: User,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'author' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2,
  reviews: [],
  comments: []
}
=--------------------------------------------------args
{ orderBy: [Object: null prototype] { createdAt: 'desc' } }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'comments',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Comment!]!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'comments' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'fullname',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'fullname' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'username',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'username' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'avatar',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'avatar' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'name',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'name' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'image',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'image' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'books',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Book!]!,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'books' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'reviews',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Review!]!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'reviews' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'author',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: User,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'author' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{ orderBy: [Object: null prototype] { createdAt: 'asc' } }
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'chapters',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [Array],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  ],
  returnType: [Chapter!]!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 'book' }, key: 'chapters' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'fullname',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'fullname' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'username',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'username' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 2,
  username: 'Sam',
  firstname: 'Unknown',
  givenname: 'Digital',
  fullname: 'Digital Unknown',
  email: null,
  avatar: 'https://lh3.googleusercontent.com/a-/AOh14Gjjz9ZP-roxTSlFdAVvMEGz5KPkFQsBo0jZADCU',
  googleId: '109847172728879810845',
  getStreamToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMTA5ODQ3MTcyNzI4ODc5ODEwODQ1In0.N563jkWsBH0yuN6-hhQawRGggb4TFRuQzH02T5Er7DY'
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'avatar',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: String,
  parentType: User,
  path: { prev: { prev: [Object], key: 'author' }, key: 'avatar' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 1,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Sat Jul 18 2020 20:52:15 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-05-25 at 16.43.47.png',
  createdAt: 2020-07-18T17:52:17.848Z,
  authorId: 2,
  views: 73
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 0 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 3,
  name: 'sasdas',
  description: 'asd',
  image: null,
  createdAt: 2020-07-20T11:10:18.201Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 1 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 4,
  name: 'asdasdasd',
  description: 'sadasdas',
  image: null,
  createdAt: 2020-07-20T14:05:00.905Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 2 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 5,
  name: 'book with tags',
  description: 'ok',
  image: null,
  createdAt: 2020-07-20T14:08:24.727Z,
  authorId: 2,
  views: 4
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 3 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  name: 'sadas',
  description: 'asdsa',
  image: null,
  createdAt: 2020-07-20T15:13:50.479Z,
  authorId: 2,
  views: 4
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 4 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 7,
  name: 'mah book',
  description: 'asdasdasd',
  image: null,
  createdAt: 2020-07-20T15:31:02.857Z,
  authorId: 2,
  views: 3
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 5 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 8,
  name: '1234',
  description: '1234',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:32:54 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:33:03.146Z,
  authorId: 2,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 6 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 9,
  name: '1234',
  description: '1234',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:32:54 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:33:03.199Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 7 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 10,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.396Z,
  authorId: 2,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 8 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 11,
  name: '123',
  description: '123',
  image: 'http://localhost:4000/files/Tue Jul 21 2020 16:35:57 GMT+0300 (Eastern European Summer Time)-Screenshot 2020-06-23 at 13.12.04.png',
  createdAt: 2020-07-21T13:36:01.422Z,
  authorId: 2,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Book,
  path: { prev: { prev: [Object], key: 9 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 5,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.165Z,
  authorId: 2,
  bookId: 11,
  views: 0
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 0 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
=--------------------------------------------------root
{
  id: 6,
  title: 'new book',
  content: 'ok',
  image: null,
  createdAt: 2020-07-21T13:40:43.201Z,
  authorId: 2,
  bookId: 11,
  views: 2
}
=--------------------------------------------------args
{}
=--------------------------------------------------context
{
  request: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: false,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost:4000',
      connection: 'keep-alive',
      'content-length': '1235',
      authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type': 'application/json',
      accept: '*/*',
      origin: 'http://localhost:3000',
      'sec-fetch-site': 'same-site',
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:3000/books/11/2',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8'
    },
    rawHeaders: [
      'Host',
      'localhost:4000',
      'Connection',
      'keep-alive',
      'Content-Length',
      '1235',
      'authorization',
      'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NTMzODM1N30.gU7YiiSmeJZ_IwRDqt5DT3Zm0o0zoJjkIN2zHtZ1Ii8',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36',
      'content-type',
      'application/json',
      'Accept',
      '*/*',
      'Origin',
      'http://localhost:3000',
      'Sec-Fetch-Site',
      'same-site',
      'Sec-Fetch-Mode',
      'cors',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:3000/books/11/2',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Socket],
      connection: [Socket],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MemoryStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      sessions: [Object: null prototype],
      generate: [Function],
      [Symbol(kCapture)]: false
    },
    sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
    session: Session { cookie: [Object] },
    body: {
      query: 'query ($bookId: Int!, $skip: Int) {\n' +
        '  chapterByBook(bookId: $bookId, skip: $skip) {\n' +
        '    ...Chapter\n' +
        '    content\n' +
        '    views\n' +
        '    book {\n' +
        '      ...Book\n' +
        '      author {\n' +
        '        ...User\n' +
        '        __typename\n' +
        '      }\n' +
        '      reviews {\n' +
        '        id\n' +
        '        stars\n' +
        '        __typename\n' +
        '      }\n' +
        '      chapters(orderBy: {createdAt: asc}) {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    author {\n' +
        '      ...User\n' +
        '      books {\n' +
        '        id\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    likes {\n' +
        '      ...Like\n' +
        '      __typename\n' +
        '    }\n' +
        '    comments(orderBy: {createdAt: desc}) {\n' +
        '      ...Comment\n' +
        '      replies(orderBy: {createdAt: desc}) {\n' +
        '        ...Comment\n' +
        '        __typename\n' +
        '      }\n' +
        '      __typename\n' +
        '    }\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment User on User {\n' +
        '  id\n' +
        '  fullname\n' +
        '  username\n' +
        '  avatar\n' +
        '}\n' +
        '\n' +
        'fragment Book on Book {\n' +
        '  id\n' +
        '  name\n' +
        '  image\n' +
        '}\n' +
        '\n' +
        'fragment Chapter on Chapter {\n' +
        '  id\n' +
        '  title\n' +
        '}\n' +
        '\n' +
        'fragment Comment on Comment {\n' +
        '  id\n' +
        '  body\n' +
        '  createdAt\n' +
        '  isChild\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '  likes {\n' +
        '    ...Like\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'fragment Like on Like {\n' +
        '  id\n' +
        '  author {\n' +
        '    ...User\n' +
        '    __typename\n' +
        '  }\n' +
        '}\n',
      variables: [Object]
    },
    _passport: { instance: [Authenticator] },
    _body: true,
    length: undefined,
    route: Route { path: '/', stack: [Array], methods: [Object] },
    [Symbol(kCapture)]: false
  },
  response: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 17,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13719,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 549,
        [Symbol(triggerId)]: 19
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular],
      _parsedOriginalUrl: [Url],
      sessionStore: [MemoryStore],
      sessionID: 'gT4y8gGQK6JRHUb4_8QOprpM1Ed7nMto',
      session: [Session],
      body: [Object],
      _passport: [Object],
      _body: true,
      length: undefined,
      route: [Route],
      [Symbol(kCapture)]: false
    },
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'access-control-allow-origin': [Array]
    }
  },
  fragmentReplacements: [],
  prisma: NewPrismaClient {
    errorFormat: 'colorless',
    measurePerformance: false,
    dmmf: DMMFClass {
      outputTypeMap: [Object],
      outputTypeToMergedOutputType: [Function],
      datamodel: [Object],
      schema: [Object],
      mappings: [Array],
      enumMap: [Object],
      queryType: [Object],
      mutationType: [Object],
      modelMap: [Object],
      outputTypes: [Array],
      inputTypes: [Array],
      inputTypeMap: [Object]
    },
    engineConfig: {
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      engineEndpoint: undefined,
      datasources: [],
      generator: [Object],
      showColors: false,
      logLevel: undefined,
      logQueries: undefined,
      env: [Object],
      flags: [],
      clientVersion: '2.2.2',
      enableExperimental: [Array]
    },
    engine: NodeEngine {
      restartCount: 0,
      queryEngineStarted: true,
      enableExperimental: [Array],
      queryEngineKilled: false,
      managementApiEnabled: false,
      ready: false,
      stderrLogs: '',
      stdoutLogs: '',
      handleRequestError: [Function],
      env: [Object],
      cwd: '/Users/digital/Projects/graphql/prisma',
      debug: false,
      datamodelPath: '/Users/digital/Projects/graphql/node_modules/.prisma/client/schema.prisma',
      prismaPath: undefined,
      generator: [Object],
      datasources: [],
      logEmitter: [EventEmitter],
      showColors: false,
      logLevel: undefined,
      logQueries: false,
      clientVersion: '2.2.2',
      flags: [],
      engineEndpoint: undefined,
      platformPromise: [Promise],
      lastError: undefined,
      lastErrorLog: undefined,
      lastPanic: undefined,
      globalKillSignalReceived: undefined,
      startPromise: [Promise],
      platform: 'darwin',
      port: 56162,
      child: [ChildProcess],
      engineStartDeferred: undefined,
      undici: [Undici],
      url: 'http://localhost:56162',
      currentRequestPromise: [Promise]
    },
    fetcher: PrismaClientFetcher {
      prisma: [Circular],
      debug: false,
      hooks: undefined,
      dataloader: [Dataloader]
    },
    user: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    book: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    chapter: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    tag: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    genre: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    comment: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    review: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    like: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    notification: {
      findOne: [Function],
      findMany: [Function],
      create: [Function],
      delete: [Function],
      update: [Function],
      deleteMany: [Function],
      updateMany: [Function],
      upsert: [Function],
      count: [Function],
      aggregate: [Function]
    },
    connectionPromise: Promise { undefined }
  },
  _shield: { cache: {} }
}
=--------------------------------------------------info
{
  fieldName: 'id',
  fieldNodes: [
    {
      kind: 'Field',
      alias: undefined,
      name: [Object],
      arguments: [],
      directives: [],
      selectionSet: undefined,
      loc: [Object]
    }
  ],
  returnType: Int!,
  parentType: Chapter,
  path: { prev: { prev: [Object], key: 1 }, key: 'id' },
  schema: GraphQLSchema {
    __validationErrors: [],
    extensions: [Object: null prototype] { nexus: [NexusSchemaExtension] },
    astNode: undefined,
    extensionASTNodes: undefined,
    __allowedLegacyNames: [],
    _queryType: Query,
    _mutationType: Mutation,
    _subscriptionType: undefined,
    _directives: [ @include, @skip, @deprecated ],
    _typeMap: [Object: null prototype] {
      Query: Query,
      UserWhereUniqueInput: UserWhereUniqueInput,
      Int: Int,
      String: String,
      User: User,
      Book: Book,
      DateTime: DateTime,
      ChapterOrderByInput: ChapterOrderByInput,
      OrderByArg: OrderByArg,
      Chapter: Chapter,
      Like: Like,
      Comment: Comment,
      Boolean: Boolean,
      CommentOrderByInput: CommentOrderByInput,
      Review: Review,
      Tag: Tag,
      Genre: Genre,
      BookWhereUniqueInput: BookWhereUniqueInput,
      BookOrderByInput: BookOrderByInput,
      ChapterWhereUniqueInput: ChapterWhereUniqueInput,
      ChapterWhereInput: ChapterWhereInput,
      IntFilter: IntFilter,
      NullableStringFilter: NullableStringFilter,
      StringFilter: StringFilter,
      DateTimeFilter: DateTimeFilter,
      NullableIntFilter: NullableIntFilter,
      LikeFilter: LikeFilter,
      LikeWhereInput: LikeWhereInput,
      UserWhereInput: UserWhereInput,
      BookFilter: BookFilter,
      BookWhereInput: BookWhereInput,
      UserFilter: UserFilter,
      ChapterFilter: ChapterFilter,
      TagFilter: TagFilter,
      TagWhereInput: TagWhereInput,
      GenreFilter: GenreFilter,
      GenreWhereInput: GenreWhereInput,
      ReviewFilter: ReviewFilter,
      ReviewWhereInput: ReviewWhereInput,
      CommentFilter: CommentFilter,
      CommentWhereInput: CommentWhereInput,
      BooleanFilter: BooleanFilter,
      NotificationFilter: NotificationFilter,
      NotificationWhereInput: NotificationWhereInput,
      CommentWhereUniqueInput: CommentWhereUniqueInput,
      ReviewWhereUniqueInput: ReviewWhereUniqueInput,
      NotificationWhereUniqueInput: NotificationWhereUniqueInput,
      Notification: Notification,
      Mutation: Mutation,
      UserCreateInput: UserCreateInput,
      BookCreateManyWithoutAuthorInput: BookCreateManyWithoutAuthorInput,
      BookCreateWithoutAuthorInput: BookCreateWithoutAuthorInput,
      UserCreateManyWithoutFavoriteBooksInput: UserCreateManyWithoutFavoriteBooksInput,
      UserCreateWithoutFavoriteBooksInput: UserCreateWithoutFavoriteBooksInput,
      ChapterCreateManyWithoutAuthorInput: ChapterCreateManyWithoutAuthorInput,
      ChapterCreateWithoutAuthorInput: ChapterCreateWithoutAuthorInput,
      BookCreateOneWithoutChaptersInput: BookCreateOneWithoutChaptersInput,
      BookCreateWithoutChaptersInput: BookCreateWithoutChaptersInput,
      UserCreateOneWithoutBooksInput: UserCreateOneWithoutBooksInput,
      UserCreateWithoutBooksInput: UserCreateWithoutBooksInput,
      BookCreateManyWithoutReadersInput: BookCreateManyWithoutReadersInput,
      BookCreateWithoutReadersInput: BookCreateWithoutReadersInput,
      ChapterCreateManyWithoutBookInput: ChapterCreateManyWithoutBookInput,
      ChapterCreateWithoutBookInput: ChapterCreateWithoutBookInput,
      UserCreateOneWithoutChaptersInput: UserCreateOneWithoutChaptersInput,
      UserCreateWithoutChaptersInput: UserCreateWithoutChaptersInput,
      ReviewCreateManyWithoutAuthorInput: ReviewCreateManyWithoutAuthorInput,
      ReviewCreateWithoutAuthorInput: ReviewCreateWithoutAuthorInput,
      BookCreateOneWithoutReviewsInput: BookCreateOneWithoutReviewsInput,
      BookCreateWithoutReviewsInput: BookCreateWithoutReviewsInput,
      TagCreateManyWithoutBooksInput: TagCreateManyWithoutBooksInput,
      TagCreateWithoutBooksInput: TagCreateWithoutBooksInput,
      TagWhereUniqueInput: TagWhereUniqueInput,
      GenreCreateManyWithoutBooksInput: GenreCreateManyWithoutBooksInput,
      GenreCreateWithoutBooksInput: GenreCreateWithoutBooksInput,
      GenreWhereUniqueInput: GenreWhereUniqueInput,
      LikeCreateManyWithoutBookInput: LikeCreateManyWithoutBookInput,
      LikeCreateWithoutBookInput: LikeCreateWithoutBookInput,
      UserCreateOneWithoutLikesInput: UserCreateOneWithoutLikesInput,
      UserCreateWithoutLikesInput: UserCreateWithoutLikesInput,
      CommentCreateManyWithoutAuthorInput: CommentCreateManyWithoutAuthorInput,
      CommentCreateWithoutAuthorInput: CommentCreateWithoutAuthorInput,
      BookCreateOneWithoutCommentsInput: BookCreateOneWithoutCommentsInput,
      BookCreateWithoutCommentsInput: BookCreateWithoutCommentsInput,
      ReviewCreateManyWithoutBookInput: ReviewCreateManyWithoutBookInput,
      ReviewCreateWithoutBookInput: ReviewCreateWithoutBookInput,
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInput,
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInput,
      LikeCreateManyWithoutAuthorInput: LikeCreateManyWithoutAuthorInput,
      LikeCreateWithoutAuthorInput: LikeCreateWithoutAuthorInput,
      BookCreateOneWithoutLikesInput: BookCreateOneWithoutLikesInput,
      BookCreateWithoutLikesInput: BookCreateWithoutLikesInput,
      CommentCreateManyWithoutBookInput: CommentCreateManyWithoutBookInput,
      CommentCreateWithoutBookInput: CommentCreateWithoutBookInput,
      UserCreateOneWithoutCommentsInput: UserCreateOneWithoutCommentsInput,
      UserCreateWithoutCommentsInput: UserCreateWithoutCommentsInput,
      UserCreateManyWithoutFollowersInput: UserCreateManyWithoutFollowersInput,
      UserCreateWithoutFollowersInput: UserCreateWithoutFollowersInput,
      NotificationCreateManyWithoutAuthorInput: NotificationCreateManyWithoutAuthorInput,
      NotificationCreateWithoutAuthorInput: NotificationCreateWithoutAuthorInput,
      BookCreateOneWithoutNotificationInput: BookCreateOneWithoutNotificationInput,
      BookCreateWithoutNotificationInput: BookCreateWithoutNotificationInput,
      ChapterCreateOneWithoutNotificationInput: ChapterCreateOneWithoutNotificationInput,
      ChapterCreateWithoutNotificationInput: ChapterCreateWithoutNotificationInput,
      LikeCreateManyWithoutChapterInput: LikeCreateManyWithoutChapterInput,
      LikeCreateWithoutChapterInput: LikeCreateWithoutChapterInput,
      CommentCreateOneWithoutLikesInput: CommentCreateOneWithoutLikesInput,
      CommentCreateWithoutLikesInput: CommentCreateWithoutLikesInput,
      ChapterCreateOneWithoutCommentsInput: ChapterCreateOneWithoutCommentsInput,
      ChapterCreateWithoutCommentsInput: ChapterCreateWithoutCommentsInput,
      ReviewCreateManyWithoutChapterInput: ReviewCreateManyWithoutChapterInput,
      ReviewCreateWithoutChapterInput: ReviewCreateWithoutChapterInput,
      LikeCreateManyWithoutReviewInput: LikeCreateManyWithoutReviewInput,
      LikeCreateWithoutReviewInput: LikeCreateWithoutReviewInput,
      ChapterCreateOneWithoutLikesInput: ChapterCreateOneWithoutLikesInput,
      ChapterCreateWithoutLikesInput: ChapterCreateWithoutLikesInput,
      CommentCreateManyWithoutChapterInput: CommentCreateManyWithoutChapterInput,
      CommentCreateWithoutChapterInput: CommentCreateWithoutChapterInput,
      LikeCreateManyWithoutCommentInput: LikeCreateManyWithoutCommentInput,
      LikeCreateWithoutCommentInput: LikeCreateWithoutCommentInput,
      ReviewCreateOneWithoutLikesInput: ReviewCreateOneWithoutLikesInput,
      ReviewCreateWithoutLikesInput: ReviewCreateWithoutLikesInput,
      ChapterCreateOneWithoutReviewsInput: ChapterCreateOneWithoutReviewsInput,
      ChapterCreateWithoutReviewsInput: ChapterCreateWithoutReviewsInput,
      NotificationCreateManyWithoutChapterInput: NotificationCreateManyWithoutChapterInput,
      NotificationCreateWithoutChapterInput: NotificationCreateWithoutChapterInput,
      UserCreateOneWithoutNotificationInput: UserCreateOneWithoutNotificationInput,
      UserCreateWithoutNotificationInput: UserCreateWithoutNotificationInput,
      UserCreateManyWithoutFollowingInput: UserCreateManyWithoutFollowingInput,
      UserCreateWithoutFollowingInput: UserCreateWithoutFollowingInput,
      CommentCreateOneWithoutNotificationInput: CommentCreateOneWithoutNotificationInput,
      CommentCreateWithoutNotificationInput: CommentCreateWithoutNotificationInput,
      CommentCreateManyWithoutParentInput: CommentCreateManyWithoutParentInput,
      CommentCreateWithoutParentInput: CommentCreateWithoutParentInput,
      NotificationCreateManyWithoutReviewInput: NotificationCreateManyWithoutReviewInput,
      NotificationCreateWithoutReviewInput: NotificationCreateWithoutReviewInput,
      CommentCreateOneWithoutRepliesInput: CommentCreateOneWithoutRepliesInput,
      CommentCreateWithoutRepliesInput: CommentCreateWithoutRepliesInput,
      LikeWhereUniqueInput: LikeWhereUniqueInput,
      NotificationCreateManyWithoutBookInput: NotificationCreateManyWithoutBookInput,
      NotificationCreateWithoutBookInput: NotificationCreateWithoutBookInput,
      UserUpdateInput: UserUpdateInput,
      BookUpdateManyWithoutAuthorInput: BookUpdateManyWithoutAuthorInput,
      BookUpdateWithWhereUniqueWithoutAuthorInput: BookUpdateWithWhereUniqueWithoutAuthorInput,
      BookUpdateWithoutAuthorDataInput: BookUpdateWithoutAuthorDataInput,
      UserUpdateManyWithoutFavoriteBooksInput: UserUpdateManyWithoutFavoriteBooksInput,
      UserUpdateWithWhereUniqueWithoutFavoriteBooksInput: UserUpdateWithWhereUniqueWithoutFavoriteBooksInput,
      UserUpdateWithoutFavoriteBooksDataInput: UserUpdateWithoutFavoriteBooksDataInput,
      ChapterUpdateManyWithoutAuthorInput: ChapterUpdateManyWithoutAuthorInput,
      ChapterUpdateWithWhereUniqueWithoutAuthorInput: ChapterUpdateWithWhereUniqueWithoutAuthorInput,
      ChapterUpdateWithoutAuthorDataInput: ChapterUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutChaptersInput: BookUpdateOneWithoutChaptersInput,
      BookUpdateWithoutChaptersDataInput: BookUpdateWithoutChaptersDataInput,
      UserUpdateOneWithoutBooksInput: UserUpdateOneWithoutBooksInput,
      UserUpdateWithoutBooksDataInput: UserUpdateWithoutBooksDataInput,
      BookUpdateManyWithoutReadersInput: BookUpdateManyWithoutReadersInput,
      BookUpdateWithWhereUniqueWithoutReadersInput: BookUpdateWithWhereUniqueWithoutReadersInput,
      BookUpdateWithoutReadersDataInput: BookUpdateWithoutReadersDataInput,
      ChapterUpdateManyWithoutBookInput: ChapterUpdateManyWithoutBookInput,
      ChapterUpdateWithWhereUniqueWithoutBookInput: ChapterUpdateWithWhereUniqueWithoutBookInput,
      ChapterUpdateWithoutBookDataInput: ChapterUpdateWithoutBookDataInput,
      UserUpdateOneWithoutChaptersInput: UserUpdateOneWithoutChaptersInput,
      UserUpdateWithoutChaptersDataInput: UserUpdateWithoutChaptersDataInput,
      ReviewUpdateManyWithoutAuthorInput: ReviewUpdateManyWithoutAuthorInput,
      ReviewUpdateWithWhereUniqueWithoutAuthorInput: ReviewUpdateWithWhereUniqueWithoutAuthorInput,
      ReviewUpdateWithoutAuthorDataInput: ReviewUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutReviewsInput: BookUpdateOneWithoutReviewsInput,
      BookUpdateWithoutReviewsDataInput: BookUpdateWithoutReviewsDataInput,
      TagUpdateManyWithoutBooksInput: TagUpdateManyWithoutBooksInput,
      TagUpdateWithWhereUniqueWithoutBooksInput: TagUpdateWithWhereUniqueWithoutBooksInput,
      TagUpdateWithoutBooksDataInput: TagUpdateWithoutBooksDataInput,
      TagUpdateManyWithWhereNestedInput: TagUpdateManyWithWhereNestedInput,
      TagScalarWhereInput: TagScalarWhereInput,
      TagUpdateManyDataInput: TagUpdateManyDataInput,
      TagUpsertWithWhereUniqueWithoutBooksInput: TagUpsertWithWhereUniqueWithoutBooksInput,
      GenreUpdateManyWithoutBooksInput: GenreUpdateManyWithoutBooksInput,
      GenreUpdateWithWhereUniqueWithoutBooksInput: GenreUpdateWithWhereUniqueWithoutBooksInput,
      GenreUpdateWithoutBooksDataInput: GenreUpdateWithoutBooksDataInput,
      GenreUpdateManyWithWhereNestedInput: GenreUpdateManyWithWhereNestedInput,
      GenreScalarWhereInput: GenreScalarWhereInput,
      GenreUpdateManyDataInput: GenreUpdateManyDataInput,
      GenreUpsertWithWhereUniqueWithoutBooksInput: GenreUpsertWithWhereUniqueWithoutBooksInput,
      LikeUpdateManyWithoutBookInput: LikeUpdateManyWithoutBookInput,
      LikeUpdateWithWhereUniqueWithoutBookInput: LikeUpdateWithWhereUniqueWithoutBookInput,
      LikeUpdateWithoutBookDataInput: LikeUpdateWithoutBookDataInput,
      UserUpdateOneWithoutLikesInput: UserUpdateOneWithoutLikesInput,
      UserUpdateWithoutLikesDataInput: UserUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutAuthorInput: CommentUpdateManyWithoutAuthorInput,
      CommentUpdateWithWhereUniqueWithoutAuthorInput: CommentUpdateWithWhereUniqueWithoutAuthorInput,
      CommentUpdateWithoutAuthorDataInput: CommentUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutCommentsInput: BookUpdateOneWithoutCommentsInput,
      BookUpdateWithoutCommentsDataInput: BookUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutBookInput: ReviewUpdateManyWithoutBookInput,
      ReviewUpdateWithWhereUniqueWithoutBookInput: ReviewUpdateWithWhereUniqueWithoutBookInput,
      ReviewUpdateWithoutBookDataInput: ReviewUpdateWithoutBookDataInput,
      UserUpdateOneWithoutReviewsInput: UserUpdateOneWithoutReviewsInput,
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInput,
      LikeUpdateManyWithoutAuthorInput: LikeUpdateManyWithoutAuthorInput,
      LikeUpdateWithWhereUniqueWithoutAuthorInput: LikeUpdateWithWhereUniqueWithoutAuthorInput,
      LikeUpdateWithoutAuthorDataInput: LikeUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutLikesInput: BookUpdateOneWithoutLikesInput,
      BookUpdateWithoutLikesDataInput: BookUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutBookInput: CommentUpdateManyWithoutBookInput,
      CommentUpdateWithWhereUniqueWithoutBookInput: CommentUpdateWithWhereUniqueWithoutBookInput,
      CommentUpdateWithoutBookDataInput: CommentUpdateWithoutBookDataInput,
      UserUpdateOneWithoutCommentsInput: UserUpdateOneWithoutCommentsInput,
      UserUpdateWithoutCommentsDataInput: UserUpdateWithoutCommentsDataInput,
      UserUpdateManyWithoutFollowersInput: UserUpdateManyWithoutFollowersInput,
      UserUpdateWithWhereUniqueWithoutFollowersInput: UserUpdateWithWhereUniqueWithoutFollowersInput,
      UserUpdateWithoutFollowersDataInput: UserUpdateWithoutFollowersDataInput,
      NotificationUpdateManyWithoutAuthorInput: NotificationUpdateManyWithoutAuthorInput,
      NotificationUpdateWithWhereUniqueWithoutAuthorInput: NotificationUpdateWithWhereUniqueWithoutAuthorInput,
      NotificationUpdateWithoutAuthorDataInput: NotificationUpdateWithoutAuthorDataInput,
      BookUpdateOneWithoutNotificationInput: BookUpdateOneWithoutNotificationInput,
      BookUpdateWithoutNotificationDataInput: BookUpdateWithoutNotificationDataInput,
      BookUpsertWithoutNotificationInput: BookUpsertWithoutNotificationInput,
      ChapterUpdateOneWithoutNotificationInput: ChapterUpdateOneWithoutNotificationInput,
      ChapterUpdateWithoutNotificationDataInput: ChapterUpdateWithoutNotificationDataInput,
      LikeUpdateManyWithoutChapterInput: LikeUpdateManyWithoutChapterInput,
      LikeUpdateWithWhereUniqueWithoutChapterInput: LikeUpdateWithWhereUniqueWithoutChapterInput,
      LikeUpdateWithoutChapterDataInput: LikeUpdateWithoutChapterDataInput,
      CommentUpdateOneWithoutLikesInput: CommentUpdateOneWithoutLikesInput,
      CommentUpdateWithoutLikesDataInput: CommentUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutCommentsInput: ChapterUpdateOneWithoutCommentsInput,
      ChapterUpdateWithoutCommentsDataInput: ChapterUpdateWithoutCommentsDataInput,
      ReviewUpdateManyWithoutChapterInput: ReviewUpdateManyWithoutChapterInput,
      ReviewUpdateWithWhereUniqueWithoutChapterInput: ReviewUpdateWithWhereUniqueWithoutChapterInput,
      ReviewUpdateWithoutChapterDataInput: ReviewUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutReviewInput: LikeUpdateManyWithoutReviewInput,
      LikeUpdateWithWhereUniqueWithoutReviewInput: LikeUpdateWithWhereUniqueWithoutReviewInput,
      LikeUpdateWithoutReviewDataInput: LikeUpdateWithoutReviewDataInput,
      ChapterUpdateOneWithoutLikesInput: ChapterUpdateOneWithoutLikesInput,
      ChapterUpdateWithoutLikesDataInput: ChapterUpdateWithoutLikesDataInput,
      CommentUpdateManyWithoutChapterInput: CommentUpdateManyWithoutChapterInput,
      CommentUpdateWithWhereUniqueWithoutChapterInput: CommentUpdateWithWhereUniqueWithoutChapterInput,
      CommentUpdateWithoutChapterDataInput: CommentUpdateWithoutChapterDataInput,
      LikeUpdateManyWithoutCommentInput: LikeUpdateManyWithoutCommentInput,
      LikeUpdateWithWhereUniqueWithoutCommentInput: LikeUpdateWithWhereUniqueWithoutCommentInput,
      LikeUpdateWithoutCommentDataInput: LikeUpdateWithoutCommentDataInput,
      ReviewUpdateOneWithoutLikesInput: ReviewUpdateOneWithoutLikesInput,
      ReviewUpdateWithoutLikesDataInput: ReviewUpdateWithoutLikesDataInput,
      ChapterUpdateOneWithoutReviewsInput: ChapterUpdateOneWithoutReviewsInput,
      ChapterUpdateWithoutReviewsDataInput: ChapterUpdateWithoutReviewsDataInput,
      NotificationUpdateManyWithoutChapterInput: NotificationUpdateManyWithoutChapterInput,
      NotificationUpdateWithWhereUniqueWithoutChapterInput: NotificationUpdateWithWhereUniqueWithoutChapterInput,
      NotificationUpdateWithoutChapterDataInput: NotificationUpdateWithoutChapterDataInput,
      UserUpdateOneWithoutNotificationInput: UserUpdateOneWithoutNotificationInput,
      UserUpdateWithoutNotificationDataInput: UserUpdateWithoutNotificationDataInput,
      UserUpdateManyWithoutFollowingInput: UserUpdateManyWithoutFollowingInput,
      UserUpdateWithWhereUniqueWithoutFollowingInput: UserUpdateWithWhereUniqueWithoutFollowingInput,
      UserUpdateWithoutFollowingDataInput: UserUpdateWithoutFollowingDataInput,
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInput,
      UserScalarWhereInput: UserScalarWhereInput,
      UserUpdateManyDataInput: UserUpdateManyDataInput,
      UserUpsertWithWhereUniqueWithoutFollowingInput: UserUpsertWithWhereUniqueWithoutFollowingInput,
      UserUpsertWithoutNotificationInput: UserUpsertWithoutNotificationInput,
      CommentUpdateOneWithoutNotificationInput: CommentUpdateOneWithoutNotificationInput,
      CommentUpdateWithoutNotificationDataInput: CommentUpdateWithoutNotificationDataInput,
      CommentUpdateManyWithoutParentInput: CommentUpdateManyWithoutParentInput,
      CommentUpdateWithWhereUniqueWithoutParentInput: CommentUpdateWithWhereUniqueWithoutParentInput,
      CommentUpdateWithoutParentDataInput: CommentUpdateWithoutParentDataInput,
      NotificationUpdateManyWithoutReviewInput: NotificationUpdateManyWithoutReviewInput,
      NotificationUpdateWithWhereUniqueWithoutReviewInput: NotificationUpdateWithWhereUniqueWithoutReviewInput,
      NotificationUpdateWithoutReviewDataInput: NotificationUpdateWithoutReviewDataInput,
      NotificationUpdateManyWithWhereNestedInput: NotificationUpdateManyWithWhereNestedInput,
      NotificationScalarWhereInput: NotificationScalarWhereInput,
      NotificationUpdateManyDataInput: NotificationUpdateManyDataInput,
      NotificationUpsertWithWhereUniqueWithoutReviewInput: NotificationUpsertWithWhereUniqueWithoutReviewInput,
      CommentUpdateManyWithWhereNestedInput: CommentUpdateManyWithWhereNestedInput,
      CommentScalarWhereInput: CommentScalarWhereInput,
      CommentUpdateManyDataInput: CommentUpdateManyDataInput,
      CommentUpsertWithWhereUniqueWithoutParentInput: CommentUpsertWithWhereUniqueWithoutParentInput,
      CommentUpdateOneWithoutRepliesInput: CommentUpdateOneWithoutRepliesInput,
      CommentUpdateWithoutRepliesDataInput: CommentUpdateWithoutRepliesDataInput,
      CommentUpsertWithoutRepliesInput: CommentUpsertWithoutRepliesInput,
      CommentUpsertWithoutNotificationInput: CommentUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutChapterInput: NotificationUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutReviewsInput: ChapterUpsertWithoutReviewsInput,
      ReviewUpsertWithoutLikesInput: ReviewUpsertWithoutLikesInput,
      LikeUpdateManyWithWhereNestedInput: LikeUpdateManyWithWhereNestedInput,
      LikeScalarWhereInput: LikeScalarWhereInput,
      LikeUpdateManyDataInput: LikeUpdateManyDataInput,
      LikeUpsertWithWhereUniqueWithoutCommentInput: LikeUpsertWithWhereUniqueWithoutCommentInput,
      CommentUpsertWithWhereUniqueWithoutChapterInput: CommentUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutLikesInput: ChapterUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutReviewInput: LikeUpsertWithWhereUniqueWithoutReviewInput,
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInput,
      ReviewScalarWhereInput: ReviewScalarWhereInput,
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInput,
      ReviewUpsertWithWhereUniqueWithoutChapterInput: ReviewUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutCommentsInput: ChapterUpsertWithoutCommentsInput,
      CommentUpsertWithoutLikesInput: CommentUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutChapterInput: LikeUpsertWithWhereUniqueWithoutChapterInput,
      ChapterUpsertWithoutNotificationInput: ChapterUpsertWithoutNotificationInput,
      NotificationUpsertWithWhereUniqueWithoutAuthorInput: NotificationUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFollowersInput: UserUpsertWithWhereUniqueWithoutFollowersInput,
      UserUpsertWithoutCommentsInput: UserUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutBookInput: CommentUpsertWithWhereUniqueWithoutBookInput,
      NotificationUpdateManyWithoutBookInput: NotificationUpdateManyWithoutBookInput,
      NotificationUpdateWithWhereUniqueWithoutBookInput: NotificationUpdateWithWhereUniqueWithoutBookInput,
      NotificationUpdateWithoutBookDataInput: NotificationUpdateWithoutBookDataInput,
      NotificationUpsertWithWhereUniqueWithoutBookInput: NotificationUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutLikesInput: BookUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutAuthorInput: LikeUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutBookInput: ReviewUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutCommentsInput: BookUpsertWithoutCommentsInput,
      CommentUpsertWithWhereUniqueWithoutAuthorInput: CommentUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutLikesInput: UserUpsertWithoutLikesInput,
      LikeUpsertWithWhereUniqueWithoutBookInput: LikeUpsertWithWhereUniqueWithoutBookInput,
      BookUpsertWithoutReviewsInput: BookUpsertWithoutReviewsInput,
      ReviewUpsertWithWhereUniqueWithoutAuthorInput: ReviewUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithoutChaptersInput: UserUpsertWithoutChaptersInput,
      ChapterUpdateManyWithWhereNestedInput: ChapterUpdateManyWithWhereNestedInput,
      ChapterScalarWhereInput: ChapterScalarWhereInput,
      ChapterUpdateManyDataInput: ChapterUpdateManyDataInput,
      ChapterUpsertWithWhereUniqueWithoutBookInput: ChapterUpsertWithWhereUniqueWithoutBookInput,
      BookUpdateManyWithWhereNestedInput: BookUpdateManyWithWhereNestedInput,
      BookScalarWhereInput: BookScalarWhereInput,
      BookUpdateManyDataInput: BookUpdateManyDataInput,
      BookUpsertWithWhereUniqueWithoutReadersInput: BookUpsertWithWhereUniqueWithoutReadersInput,
      UserUpsertWithoutBooksInput: UserUpsertWithoutBooksInput,
      BookUpsertWithoutChaptersInput: BookUpsertWithoutChaptersInput,
      ChapterUpsertWithWhereUniqueWithoutAuthorInput: ChapterUpsertWithWhereUniqueWithoutAuthorInput,
      UserUpsertWithWhereUniqueWithoutFavoriteBooksInput: UserUpsertWithWhereUniqueWithoutFavoriteBooksInput,
      BookUpsertWithWhereUniqueWithoutAuthorInput: BookUpsertWithWhereUniqueWithoutAuthorInput,
      BookCreateInput: BookCreateInput,
      BookUpdateInput: BookUpdateInput,
      ChapterCreateInput: ChapterCreateInput,
      ChapterUpdateInput: ChapterUpdateInput,
      CommentCreateInput: CommentCreateInput,
      CommentUpdateInput: CommentUpdateInput,
      ReviewCreateInput: ReviewCreateInput,
      ReviewUpdateInput: ReviewUpdateInput,
      TagCreateInput: TagCreateInput,
      BookCreateManyWithoutTagsInput: BookCreateManyWithoutTagsInput,
      BookCreateWithoutTagsInput: BookCreateWithoutTagsInput,
      TagUpdateInput: TagUpdateInput,
      BookUpdateManyWithoutTagsInput: BookUpdateManyWithoutTagsInput,
      BookUpdateWithWhereUniqueWithoutTagsInput: BookUpdateWithWhereUniqueWithoutTagsInput,
      BookUpdateWithoutTagsDataInput: BookUpdateWithoutTagsDataInput,
      BookUpsertWithWhereUniqueWithoutTagsInput: BookUpsertWithWhereUniqueWithoutTagsInput,
      GenreCreateInput: GenreCreateInput,
      BookCreateManyWithoutGenresInput: BookCreateManyWithoutGenresInput,
      BookCreateWithoutGenresInput: BookCreateWithoutGenresInput,
      GenreUpdateInput: GenreUpdateInput,
      BookUpdateManyWithoutGenresInput: BookUpdateManyWithoutGenresInput,
      BookUpdateWithWhereUniqueWithoutGenresInput: BookUpdateWithWhereUniqueWithoutGenresInput,
      BookUpdateWithoutGenresDataInput: BookUpdateWithoutGenresDataInput,
      BookUpsertWithWhereUniqueWithoutGenresInput: BookUpsertWithWhereUniqueWithoutGenresInput,
      LikeCreateInput: LikeCreateInput,
      LikeUpdateInput: LikeUpdateInput,
      __Schema: __Schema,
      __Type: __Type,
      __TypeKind: __TypeKind,
      __Field: __Field,
      __InputValue: __InputValue,
      __EnumValue: __EnumValue,
      __Directive: __Directive,
      __DirectiveLocation: __DirectiveLocation
    },
    _possibleTypeMap: [Object: null prototype] {},
    _implementations: [Object: null prototype] {},
    schema: [Circular],
    fragmentReplacements: []
  },
  fragments: [Object: null prototype] {
    User: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Book: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Chapter: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Comment: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    },
    Like: {
      kind: 'FragmentDefinition',
      name: [Object],
      typeCondition: [Object],
      directives: [],
      selectionSet: [Object],
      loc: [Object]
    }
  },
  rootValue: undefined,
  operation: {
    kind: 'OperationDefinition',
    operation: 'query',
    name: undefined,
    variableDefinitions: [ [Object], [Object] ],
    directives: [],
    selectionSet: { kind: 'SelectionSet', selections: [Array], loc: [Object] },
    loc: { start: 0, end: 721 }
  },
  variableValues: { bookId: 11, skip: 1 }
}
